#!/bin/sh

# necessary to load scripting-addition during startup on macOS Big Sur
# *yabai --load-sa* is configured to run through sudo without a password
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"


# Follow this guide whrn updating yabai to latest version
# https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#updating-to-the-latest-release

# global settings
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          off
yabai -m config window_placement             second_child
yabai -m config window_shadow                float
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 on
yabai -m config mouse_modifier                fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config external_bar                 all:27:0
yabai -m config layout                       bsp
yabai -m config top_padding                  3
yabai -m config bottom_padding               3
yabai -m config left_padding                 3
yabai -m config right_padding                3
yabai -m config window_gap                   10

# Border configuration
border_ignored_apps="(IntelliJ IDEA|WebStorm|RubyMine|Alacritty|VLC|VMware|System Preferences|Untitled|Authy Desktop|JetBrains Toolbox)"
border_ignored_titles="(About This Mac|Copy|Bin)"
yabai -m rule --add title="${border_ignored_titles}" border=off
yabai -m rule --add app="${border_ignored_apps}" border=off

# Web browsers
yabai -m rule --add app="^Google Chrome$" space=1

# Text editors
yabai -m rule --add app="^(Code|RStudio)$" space=2

# Jetbrains apps
apps="^(IntelliJ IDEA|WebStorm|RubyMine|PyCharm|DataGrip)$" # regex that matches JetBrains apps
yabai -m rule --add app="${apps}" space=3  manage=off
yabai -m signal --add event=window_created app="${apps}" action='~/Personal/dotfiles/yabai/jetbrains.sh' # add a signal that floats a window created by these apps when it's the only window

# Terminal
yabai -m rule --add app="^(Alacritty)$" space=4

# Music
yabai -m rule --add app="^(Spotify|Amazon Music)$" space=5

# Social
yabai -m rule --add app="^(Franz|DingTalk|Slack|WhatsApp|Microsoft Teams|Zoho Mail - Desktop)$" space=6

# DB/Postman etc
yabai -m rule --add app="^(Robo 3T|Postman|MySQLWorkbench|Persepolis Download Manager|NordVPN IKE)$" space=7

# Unmanaged apps
yabai -m rule --add title="(Copy|Bin|About This Mac|Info|JetBrains Toolbox|Finder Preferences|Preferences|iMacros|QuickTime Player)" manage=off
yabai -m rule --add app="^(Calculator|Authy Desktop|Postgres|VLC|System Preferences|IINA|iMazing HEIC Converter|AppCleaner|Bitwarden|LastPass)$" manage=off

# disable the border on the MS teams window
yabai -m rule --add \
    app='^Microsoft Teams$' \
    title='^Microsoft Teams Notification$' \
    border=off

# Tries to focus the window under the cursor whenever the MS teams notification gains focus
# Probably conflicts with mouse follows focus in some ways
yabai -m signal --add \
    event=window_focused \
    app='^Microsoft Teams$' \
    title='^Microsoft Teams Notification$' \
    action='yabai -m window --focus west > /dev/null 2>&1'

# Use the stack layout for the first 3 spaces
yabai -m config --space 1 layout stack
yabai -m config --space 2 layout stack
yabai -m config --space 3 layout stack

yabai -m signal --add event=window_changed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_hidden action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
# yabai -m signal --add event=window_minimized action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# Refresh spaces widget on space change
yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# Refresh spaces widget on display focus change
yabai -m signal --add event=display_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# Refresh process widget on space change
yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"

# Refresh process widget on when focused application changes
yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# Refresh spaces widget on when focused application changes
yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# Refresh process widget on when focused application changes
yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# Refresh spaces widget on when focused application changes
yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# Refresh process widget on when an application window is closed
yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# Refresh spaces widget on when an application window is closed
yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# Refresh process widget when current window title changes
yabai -m signal --add event=window_title_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
