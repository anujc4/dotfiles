#!/bin/bash

# Common aliases
alias ezsh='code $DOT_SOURCE'
alias rzsh='source ~/.zshrc'
alias rtmux='tmux source ~/.tmux.conf'
alias f='fuck'

# General purpose alias
alias tmuxls='tmux list-sessions'
tmuxattach()
{
  tmux attach-session -t "$1"
}

tmuxkillsession()
{
  tmux kill-session -t "$1"
}

alias tmuxkillall='tmux kill-server'
alias brewup='brew update; brew upgrade; brew cleanup; brew doctor'

gitdelete()
{
  git fetch -p ; git branch -r | awk '{print $1}' | grep -E -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d
  git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d
  git remote prune origin
}

gitdeletesquashed()
{
  git checkout -q master && git for-each-ref refs/heads/ "--format=%(refname:short)" | while read -r branch
  do
    mergeBase=$(git merge-base master "$branch") && \
      [[ $(git cherry master "$(git commit-tree "$(git rev-parse "$branch^{tree}")" -p "$mergeBase" -m _)") == "-"* ]] && \
      git branch -D "$branch"
  done
}

# Merges the current branch into the branch specified by the argument
gitmergeinto()
{
  if [ -z "$1" ]; then
    echo "Usage: gitmergeinto <branch>"
    return 1
  fi
  branch=$(current_branch)
  echo "Merging $branch into $1"
  git checkout "$1"
  git fetch
  git reset --hard origin/"$1"
  git merge "$branch" --no-edit
  echo "Merged $branch into $1"
}

# Squash commits in the current branch into the branch specified by the argument
gitsquashinto()
{
  if [ -z "$1" ]; then
    echo "Usage: gitsquashinto <branch>"
    return 1
  fi
  branch=$(current_branch)
  echo "Squashing $branch into $1"
  git checkout "$1"
  git fetch
  git reset --hard origin/"$1"
  git merge --squash  "$branch"
  git commit -m "Merged(squash) $branch into $1"
  echo "Squashed $branch into $1"
}

alias docker='nocorrect docker'
alias dockerkillall='docker stop $(docker ps -a -q)'
alias rm='rm -i'
tmuxs()
{
  tmuxinator start "$1"
}

tmuxx()
{
  tmuxinator stop "$1"
}

# Open bash in a docker container
dbash()
{
  docker exec -it "$1" bash
}

# Copy pwd to system clipboard by ctrl-y
function copypwd {
  pwd | pbcopy
}
zle -N copypwd
bindkey '^y' copypwd

function pet_save_previous_command() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new $(printf %q "$PREV")"
}

function pet-select() {
  # shellcheck disable=SC2034,SC2153
  BUFFER=$(pet search --query "$LBUFFER")
  # shellcheck disable=SC2034
  CURSOR=$#BUFFER
  zle redisplay
}
zle -N pet-select
stty -ixon
bindkey '^s' pet-select

# Alias for git-forgit
alias gcoo='git-forgit checkout_branch'

unalias gcp
alias gcp='git-forgit cherry_pick'

unalias gd
alias gd='git-forgit diff'

unalias gss
alias gss='git-forgit stash_show'

alias gll='git log'
